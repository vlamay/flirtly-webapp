# bot_simple.py - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è Telegram –±–æ—Ç–∞

import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "8430527446:AAFLoCZqvreDpsgz4d5z4J5LXMLC42B9ex0"
WEBAPP_URL = "https://vlamay.github.io/flirtly-webapp/"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


def get_main_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚ö° –û—Ç–∫—Ä—ã—Ç—å Flirtly",
                web_app=WebAppInfo(url=WEBAPP_URL)
            )
        ],
        [
            InlineKeyboardButton(text="‚ÑπÔ∏è –û —Å–µ—Ä–≤–∏—Å–µ", callback_data="about"),
            InlineKeyboardButton(text="üéÅ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å", callback_data="referral")
        ],
        [
            InlineKeyboardButton(text="‚≠ê Premium", callback_data="premium"),
            InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ])


@dp.message(Command("start"))
async def cmd_start(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    user_name = message.from_user.first_name
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    args = message.text.split()
    referrer_text = ""
    if len(args) > 1 and args[1].startswith("ref_"):
        referrer_text = "\n\nüéÅ <b>–¢—ã –ø–æ–ª—É—á–∏—à—å +5 –ª–∞–π–∫–æ–≤ –æ—Ç –¥—Ä—É–≥–∞!</b>"
    
    await message.answer(
        f"<b>–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã</b>\n\n"
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Flirtly</b> ‚ö°\n\n"
        f"–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –ø—Ä—è–º–æ –≤ Telegram!\n\n"
        f"<b>–ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç:</b>\n"
        f"‚Ä¢ üíï –£–º–Ω—ã–π –ø–æ–¥–±–æ—Ä —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π\n"
        f"‚Ä¢ ‚ö° Swipe –∫–∞–∫ –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö\n"
        f"‚Ä¢ üí¨ Instant —á–∞—Ç —Å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º–∏\n"
        f"‚Ä¢ üéÅ –ë–æ–Ω—É—Å—ã –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è\n\n"
        f"{referrer_text}\n\n"
        f"<b>–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!</b>",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@dp.message(Command("profile"))
async def cmd_profile(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /profile"""
    await message.answer(
        "üë§ <b>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        "–û—Ç–∫—Ä–æ–π Web App —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ—Ñ–∏–ª–µ–º!",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@dp.message(Command("search"))
async def cmd_search(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /search"""
    await message.answer(
        "üîç <b>–ü–æ–∏—Å–∫ –∞–Ω–∫–µ—Ç</b>\n\n"
        "–û—Ç–∫—Ä–æ–π Web App —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫!",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@dp.message(Command("matches"))
async def cmd_matches(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /matches"""
    await message.answer(
        "üíï <b>–¢–≤–æ–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è</b>\n\n"
        "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π.\n"
        "–û—Ç–∫—Ä–æ–π Web App –∏ –Ω–∞—á–Ω–∏ —Å–≤–∞–π–ø–∞—Ç—å!",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@dp.message(Command("chats"))
async def cmd_chats(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /chats"""
    await message.answer(
        "üí¨ <b>–¢–≤–æ–∏ —á–∞—Ç—ã</b>\n\n"
        "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç —á–∞—Ç–æ–≤.\n"
        "–ü–æ–ª—É—á–∏ –ø–µ—Ä–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ!",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@dp.message(Command("premium"))
async def cmd_premium(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /premium"""
    await message.answer(
        "‚≠ê <b>Premium –ø–æ–¥–ø–∏—Å–∫–∞</b>\n\n"
        "<b>üåü PREMIUM (250 ‚≠ê/–º–µ—Å—è—Ü)</b>\n"
        "‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –ª–∞–π–∫–∏ ‚ù§Ô∏è\n"
        "‚Ä¢ 5 —Å—É–ø–µ—Ä–ª–∞–π–∫–æ–≤ –≤ –¥–µ–Ω—å ‚ö°\n"
        "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã üîç\n"
        "‚Ä¢ –í–∏–¥–µ—Ç—å –∫—Ç–æ –ª–∞–π–∫–Ω—É–ª üëÄ\n\n"
        "<b>üíé PLATINUM (500 ‚≠ê/–º–µ—Å—è—Ü)</b>\n"
        "‚Ä¢ –í—Å—ë –∏–∑ Premium +\n"
        "‚Ä¢ AI —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å ü§ñ\n"
        "‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ø–æ–∫–∞–∑–µ üìä\n"
        "‚Ä¢ –ò–Ω–∫–æ–≥–Ω–∏—Ç–æ —Ä–µ–∂–∏–º üëª\n\n"
        "–û—Ç–∫—Ä–æ–π Web App –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è!",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@dp.message(Command("settings"))
async def cmd_settings(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /settings"""
    await message.answer(
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
        "–£–ø—Ä–∞–≤–ª—è–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —á–µ—Ä–µ–∑ Web App!",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@dp.message(Command("help"))
async def cmd_help(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    await message.answer(
        "‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å</b>\n\n"
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/profile - –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n"
        "/search - –ò—Å–∫–∞—Ç—å –∞–Ω–∫–µ—Ç—ã\n"
        "/matches - –¢–≤–æ–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è\n"
        "/chats - –¢–≤–æ–∏ —á–∞—Ç—ã\n"
        "/premium - Premium –ø–æ–¥–ø–∏—Å–∫–∞\n"
        "/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n"
        "/help - –ü–æ–º–æ—â—å\n\n"
        "<b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>\n"
        "–ù–∞–ø–∏—à–∏ @support",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@dp.callback_query(F.data == "about")
async def callback_about(callback):
    """–û —Å–µ—Ä–≤–∏—Å–µ"""
    await callback.message.edit_text(
        "<b>–û Flirtly</b> ‚ö°\n\n"
        "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –≤ Telegram!\n\n"
        "<b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n"
        "‚Ä¢ –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n"
        "‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö\n"
        "‚Ä¢ –£–º–Ω—ã–π –ø–æ–¥–±–æ—Ä\n"
        "‚Ä¢ Instant —á–∞—Ç\n\n"
        "<b>–ù–∞—á–Ω–∏ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</b>",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )
    await callback.answer()


@dp.callback_query(F.data == "referral")
async def callback_referral(callback):
    """–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"""
    user_id = callback.from_user.id
    ref_link = f"https://t.me/FFlirtly_bot?start=ref_{user_id}"
    
    await callback.message.edit_text(
        "üéÅ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
        "–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã!\n\n"
        "<b>–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞:</b>\n"
        "‚Ä¢ –¢—ã –ø–æ–ª—É—á–∞–µ—à—å: +10 –ª–∞–π–∫–æ–≤\n"
        "‚Ä¢ –î—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç: +5 –ª–∞–π–∫–æ–≤\n\n"
        f"<b>–¢–≤–æ—è —Å—Å—ã–ª–∫–∞:</b>\n"
        f"<code>{ref_link}</code>\n\n"
        "–ù–∞–∂–º–∏ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å!",
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è",
                    url=f"https://t.me/share/url?url={ref_link}&text=üî• –ü–æ–ø—Ä–æ–±—É–π Flirtly!"
                )
            ],
            [
                InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
            ]
        ])
    )
    await callback.answer()


@dp.callback_query(F.data == "premium")
async def callback_premium(callback):
    """Premium –ø–æ–¥–ø–∏—Å–∫–∞"""
    await callback.message.edit_text(
        "‚≠ê <b>Premium –ø–æ–¥–ø–∏—Å–∫–∞</b>\n\n"
        "<b>üåü PREMIUM (250 ‚≠ê/–º–µ—Å—è—Ü)</b>\n"
        "‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –ª–∞–π–∫–∏\n"
        "‚Ä¢ 5 —Å—É–ø–µ—Ä–ª–∞–π–∫–æ–≤/–¥–µ–Ω—å\n"
        "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã\n"
        "‚Ä¢ –í–∏–¥–µ—Ç—å –∫—Ç–æ –ª–∞–π–∫–Ω—É–ª\n\n"
        "<b>üíé PLATINUM (500 ‚≠ê/–º–µ—Å—è—Ü)</b>\n"
        "‚Ä¢ –í—Å—ë –∏–∑ Premium +\n"
        "‚Ä¢ AI —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å\n"
        "‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ø–æ–∫–∞–∑–µ\n"
        "‚Ä¢ –ò–Ω–∫–æ–≥–Ω–∏—Ç–æ —Ä–µ–∂–∏–º\n\n"
        "–û—Ñ–æ—Ä–º–∏ —á–µ—Ä–µ–∑ Web App!",
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ö° –û—Ç–∫—Ä—ã—Ç—å Flirtly",
                    web_app=WebAppInfo(url=WEBAPP_URL)
                )
            ],
            [
                InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
            ]
        ])
    )
    await callback.answer()


@dp.callback_query(F.data == "help")
async def callback_help(callback):
    """–ü–æ–º–æ—â—å"""
    await callback.message.edit_text(
        "‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å</b>\n\n"
        "<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n"
        "1. –û—Ç–∫—Ä–æ–π Web App\n"
        "2. –ó–∞–ø–æ–ª–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—å\n"
        "3. –ù–∞—á–Ω–∏ —Å–≤–∞–π–ø–∞—Ç—å –∞–Ω–∫–µ—Ç—ã\n"
        "4. –ü–æ–ª—É—á–∞–π —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è\n"
        "5. –û–±—â–∞–π—Å—è!\n\n"
        "<b>–í–æ–ø—Ä–æ—Å—ã?</b>\n"
        "–ù–∞–ø–∏—à–∏ @support",
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
            ]
        ])
    )
    await callback.answer()


@dp.callback_query(F.data == "back")
async def callback_back(callback):
    """–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_name = callback.from_user.first_name
    await callback.message.edit_text(
        f"<b>–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã</b>\n\n"
        f"–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Flirtly!",
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )
    await callback.answer()


@dp.message(F.web_app_data)
async def handle_webapp_data(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App"""
    import json
    
    try:
        data = json.loads(message.web_app_data.data)
        action = data.get('action')
        
        if action == 'register':
            name = data.get('name')
            age = data.get('age')
            
            await message.answer(
                f"üéâ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n"
                f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}, {age} –ª–µ—Ç!\n\n"
                f"–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –∏—Å–∫–∞—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è! ‚ö°",
                parse_mode="HTML"
            )
        
        elif action == 'like':
            await message.answer("‚ù§Ô∏è –õ–∞–π–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        
        elif action == 'superlike':
            await message.answer("‚≠ê –°—É–ø–µ—Ä–ª–∞–π–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        
        elif action == 'skip':
            await message.answer("üëé –ü—Ä–æ–ø—É—â–µ–Ω–æ")
        
        else:
            await message.answer("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!")
    
    except Exception as e:
        logger.error(f"Error handling webapp data: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info("Starting Flirtly Bot...")
    
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
