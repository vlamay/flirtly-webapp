# simple_bot.py - –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥

import requests
import json
import time
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = "8430527446:AAFLoCZqvreDpsgz4d5z4J5LXMLC42B9ex0"
WEBAPP_URL = "https://vlamay.github.io/flirtly-webapp"
BASE_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

class SimpleBot:
    def __init__(self):
        self.last_update_id = 0
        self.running = True
    
    def send_message(self, chat_id, text, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        url = f"{BASE_URL}/sendMessage"
        data = {
            "chat_id": chat_id,
            "text": text,
            "parse_mode": "HTML"
        }
        
        if reply_markup:
            data["reply_markup"] = json.dumps(reply_markup)
        
        response = requests.post(url, json=data)
        return response.json()
    
    def get_updates(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
        url = f"{BASE_URL}/getUpdates"
        params = {
            "offset": self.last_update_id + 1,
            "timeout": 30
        }
        
        response = requests.get(url, params=params)
        return response.json()
    
    def handle_command(self, update):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥"""
        message = update["message"]
        chat_id = message["chat"]["id"]
        user = message["from"]
        text = message.get("text", "")
        
        logger.info(f"User {user['id']} ({user.get('first_name', 'Unknown')}) sent: {text}")
        
        if text.startswith("/start"):
            self.handle_start(chat_id, user)
        elif text.startswith("/profile"):
            self.handle_profile(chat_id, user)
        elif text.startswith("/matches"):
            self.handle_matches(chat_id, user)
        elif text.startswith("/search"):
            self.handle_search(chat_id, user)
        elif text.startswith("/premium"):
            self.handle_premium(chat_id, user)
        elif text.startswith("/settings"):
            self.handle_settings(chat_id, user)
        elif text.startswith("/help"):
            self.handle_help(chat_id, user)
        else:
            self.handle_message(chat_id, user)
    
    def handle_start(self, chat_id, user):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ /start"""
        keyboard = {
            "inline_keyboard": [
                [{"text": "‚ö° –û—Ç–∫—Ä—ã—Ç—å Flirtly", "web_app": {"url": WEBAPP_URL}}],
                [
                    {"text": "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", "callback_data": "profile"},
                    {"text": "üíï –ú–æ–∏ –º–∞—Ç—á–∏", "callback_data": "matches"}
                ],
                [
                    {"text": "üîç –ò—Å–∫–∞—Ç—å", "callback_data": "search"},
                    {"text": "üí¨ –ß–∞—Ç—ã", "callback_data": "chats"}
                ],
                [
                    {"text": "‚≠ê Premium", "callback_data": "premium"},
                    {"text": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "callback_data": "settings"}
                ],
                [{"text": "üéÅ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π", "callback_data": "referral"}]
            ]
        }
        
        text = f"""üî• <b>–ü—Ä–∏–≤–µ—Ç, {user.get('first_name', '–¥—Ä—É–≥')}!</b>

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Flirtly</b> ‚ö° - –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è!

<b>–ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç:</b>
‚Ä¢ üíï –£–º–Ω—ã–π –ø–æ–¥–±–æ—Ä —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
‚Ä¢ ‚ö° Swipe –∫–∞–∫ –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö
‚Ä¢ üí¨ –û–±—â–µ–Ω–∏–µ –ø—Ä—è–º–æ –≤ Telegram
‚Ä¢ üéÅ –ë–æ–Ω—É—Å—ã –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π

<b>–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!</b>"""
        
        self.send_message(chat_id, text, keyboard)
    
    def handle_profile(self, chat_id, user):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ /profile"""
        keyboard = {
            "inline_keyboard": [
                [{"text": "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "web_app": {"url": f"{WEBAPP_URL}/profile"}}],
                [{"text": "üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ", "callback_data": "add_photo"}],
                [{"text": "‚óÄÔ∏è –ù–∞–∑–∞–¥", "callback_data": "back_to_start"}]
            ]
        }
        
        text = f"""üë§ <b>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>

<b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –ò–º—è: {user.get('first_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚Ä¢ Username: @{user.get('username', '–ù–µ —É–∫–∞–∑–∞–Ω')}
‚Ä¢ ID: {user['id']}

<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ ‚ù§Ô∏è –õ–∞–π–∫–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: 5
‚Ä¢ üíï –ü–æ–ª—É—á–µ–Ω–æ –ª–∞–π–∫–æ–≤: 12
‚Ä¢ üéØ –°–æ–≤–ø–∞–¥–µ–Ω–∏–π: 3
‚Ä¢ üì∏ –§–æ—Ç–æ: 2

<b>–ü–æ–¥–ø–∏—Å–∫–∞:</b>
‚Ä¢ –°—Ç–∞—Ç—É—Å: üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è"""
        
        self.send_message(chat_id, text, keyboard)
    
    def handle_matches(self, chat_id, user):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ /matches"""
        keyboard = {
            "inline_keyboard": [
                [{"text": "üí¨ –ß–∞—Ç —Å –ê–Ω–Ω–æ–π", "callback_data": "chat_1"}],
                [{"text": "üí¨ –ß–∞—Ç —Å –ú–∞—Ä–∏–µ–π", "callback_data": "chat_2"}],
                [{"text": "üí¨ –ß–∞—Ç —Å –ï–ª–µ–Ω–æ–π", "callback_data": "chat_3"}],
                [{"text": "üëÄ –í—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è", "web_app": {"url": f"{WEBAPP_URL}/matches"}}],
                [{"text": "‚óÄÔ∏è –ù–∞–∑–∞–¥", "callback_data": "back_to_start"}]
            ]
        }
        
        text = """üíï <b>–ú–æ–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è</b>

1. <b>–ê–Ω–Ω–∞, 25</b> ‚Ä¢ –ú–æ—Å–∫–≤–∞
2. <b>–ú–∞—Ä–∏—è, 26</b> ‚Ä¢ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥  
3. <b>–ï–ª–µ–Ω–∞, 24</b> ‚Ä¢ –ö–∞–∑–∞–Ω—å

<b>–£ —Ç–µ–±—è 3 –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è!</b>"""
        
        self.send_message(chat_id, text, keyboard)
    
    def handle_search(self, chat_id, user):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ /search"""
        keyboard = {
            "inline_keyboard": [
                [{"text": "‚ö° –ù–∞—á–∞—Ç—å —Å–≤–∞–π–ø–∞—Ç—å", "web_app": {"url": WEBAPP_URL}}],
                [{"text": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data": "filters"}],
                [{"text": "‚óÄÔ∏è –ù–∞–∑–∞–¥", "callback_data": "back_to_start"}]
            ]
        }
        
        text = """üîç <b>–ü–æ–∏—Å–∫ –∞–Ω–∫–µ—Ç</b>

<b>–ì–æ—Ç–æ–≤ –∏—Å–∫–∞—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞!</b>

<b>–¢–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: 18-35
‚Ä¢ –ü–æ–ª: –ñ–µ–Ω—â–∏–Ω—ã
‚Ä¢ –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: 50 –∫–º

<b>–õ–∞–π–∫–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: 5</b>

<b>–ù–∞—á–Ω–∏ —Å–≤–∞–π–ø–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</b>"""
        
        self.send_message(chat_id, text, keyboard)
    
    def handle_premium(self, chat_id, user):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ /premium"""
        keyboard = {
            "inline_keyboard": [
                [{"text": "‚≠ê –ö—É–ø–∏—Ç—å Premium", "web_app": {"url": f"{WEBAPP_URL}/premium"}}],
                [{"text": "üíé –ö—É–ø–∏—Ç—å Platinum", "web_app": {"url": f"{WEBAPP_URL}/premium"}}],
                [{"text": "üéÅ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ", "callback_data": "free_trial"}],
                [{"text": "‚óÄÔ∏è –ù–∞–∑–∞–¥", "callback_data": "back_to_start"}]
            ]
        }
        
        text = """‚≠ê <b>Premium –ø–æ–¥–ø–∏—Å–∫–∞</b>

<b>üåü PREMIUM (250 ‚≠ê/–º–µ—Å—è—Ü)</b>
‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –ª–∞–π–∫–∏ ‚ù§Ô∏è
‚Ä¢ 5 —Å—É–ø–µ—Ä–ª–∞–π–∫–æ–≤ –≤ –¥–µ–Ω—å ‚ö°
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã üîç
‚Ä¢ –í–∏–¥–µ—Ç—å –∫—Ç–æ –ª–∞–π–∫–Ω—É–ª üëÄ
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ø–æ–∫–∞–∑–µ üìä

<b>üíé PLATINUM (500 ‚≠ê/–º–µ—Å—è—Ü)</b>
‚Ä¢ –í—Å—ë –∏–∑ Premium +
‚Ä¢ AI —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å ü§ñ
‚Ä¢ –ò–Ω–∫–æ–≥–Ω–∏-taking —Ä–µ–∂–∏–º üëª
‚Ä¢ –í–∏–¥–µ—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã üëÅÔ∏è
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ üéØ

<b>üí≥ Telegram Stars</b>
–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram Stars - –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ!

<b>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:</b>
‚Ä¢ –ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è Premium - –ë–ï–°–ü–õ–ê–¢–ù–û! üéÅ
‚Ä¢ –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –Ω–∞ –º–µ—Å—è—Ü - —Å–∫–∏–¥–∫–∞ 20% üí∞"""
        
        self.send_message(chat_id, text, keyboard)
    
    def handle_settings(self, chat_id, user):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ /settings"""
        keyboard = {
            "inline_keyboard": [
                [{"text": "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "callback_data": "notifications"}],
                [{"text": "üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å", "callback_data": "privacy"}],
                [{"text": "üîç –§–∏–ª—å—Ç—Ä—ã", "callback_data": "filters"}],
                [{"text": "üì± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Web App", "web_app": {"url": f"{WEBAPP_URL}/settings"}}],
                [{"text": "‚óÄÔ∏è –ù–∞–∑–∞–¥", "callback_data": "back_to_start"}]
            ]
        }
        
        text = """‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>

<b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>
‚Ä¢ –ù–æ–≤—ã–µ –º–∞—Ç—á–∏: ‚úÖ
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è: ‚úÖ
‚Ä¢ –õ–∞–π–∫–∏: ‚úÖ
‚Ä¢ Premium –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: ‚ùå

<b>–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –ø–æ–∏—Å–∫–µ: ‚úÖ
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ‚úÖ
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ‚úÖ

<b>–§–∏–ª—å—Ç—Ä—ã:</b>
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: 18-99
‚Ä¢ –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: 50 –∫–º
‚Ä¢ –¢–æ–ª—å–∫–æ —Å —Ñ–æ—Ç–æ: ‚ùå"""
        
        self.send_message(chat_id, text, keyboard)
    
    def handle_help(self, chat_id, user):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ /help"""
        keyboard = {
            "inline_keyboard": [
                [{"text": "‚ö° –û—Ç–∫—Ä—ã—Ç—å Web App", "web_app": {"url": WEBAPP_URL}}],
                [{"text": "üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞", "url": "https://t.me/support"}],
                [{"text": "üí¨ –ì—Ä—É–ø–ø–∞", "url": "https://t.me/flirtly_support"}],
                [{"text": "‚óÄÔ∏è –ù–∞–∑–∞–¥", "callback_data": "back_to_start"}]
            ]
        }
        
        text = """‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/profile - –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
/matches - –ú–æ–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
/search - –ü–æ–∏—Å–∫ –∞–Ω–∫–µ—Ç
/premium - Premium –ø–æ–¥–ø–∏—Å–∫–∞
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>
1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è —á–µ—Ä–µ–∑ Web App
2. –ó–∞–ø–æ–ª–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—å –∏ –¥–æ–±–∞–≤—å —Ñ–æ—Ç–æ
3. –ù–∞—á–Ω–∏ —Å–≤–∞–π–ø–∞—Ç—å –∞–Ω–∫–µ—Ç—ã
4. –ü–æ–ª—É—á–∞–π —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏ –æ–±—â–∞–π—Å—è!

<b>–ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ç–æ?</b>
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ
‚Ä¢ –ü–æ–∫–∞–∂–∏ –ª–∏—Ü–æ –Ω–∞ –ø–µ—Ä–≤–æ–º —Ñ–æ—Ç–æ
‚Ä¢ –î–æ–±–∞–≤—å 3-6 —Ñ–æ—Ç–æ –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

<b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>
‚Ä¢ üìß –ù–∞–ø–∏—à–∏ @support
‚Ä¢ üí¨ –ì—Ä—É–ø–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏: @flirtly_support
‚Ä¢ üåê –°–∞–π—Ç: https://flirtly.app"""
        
        self.send_message(chat_id, text, keyboard)
    
    def handle_message(self, chat_id, user):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        keyboard = {
            "inline_keyboard": [
                [{"text": "‚ö° –û—Ç–∫—Ä—ã—Ç—å Web App", "web_app": {"url": WEBAPP_URL}}]
            ]
        }
        
        text = """üí¨ <b>–ü—Ä–∏–≤–µ—Ç!</b>

–Ø –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ Flirtly! –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:

/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/profile - –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
/matches - –ú–æ–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
/search - –ü–æ–∏—Å–∫ –∞–Ω–∫–µ—Ç
/premium - Premium –ø–æ–¥–ø–∏—Å–∫–∞
/help - –ü–æ–º–æ—â—å

–ò–ª–∏ –æ—Ç–∫—Ä–æ–π Web App –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞!"""
        
        self.send_message(chat_id, text, keyboard)
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("Starting Simple Bot...")
        
        while self.running:
            try:
                updates = self.get_updates()
                
                if updates.get("ok"):
                    for update in updates["result"]:
                        self.last_update_id = update["update_id"]
                        
                        if "message" in update:
                            self.handle_command(update)
                
                time.sleep(1)
                
            except KeyboardInterrupt:
                logger.info("Bot stopped by user")
                self.running = False
            except Exception as e:
                logger.error(f"Error: {e}")
                time.sleep(5)

if __name__ == "__main__":
    bot = SimpleBot()
    bot.run()
